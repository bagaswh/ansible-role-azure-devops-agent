- name: Install requirements
  apt:
    name: ["libcurl3", "libunwind8"]
    state: present
  register: result
  until: result is succeeded

- name: Add a agent user
  user:
    name: "{{ az_devops_agent_user }}"
    comment: "Azure DevOps Agent"
    shell: /bin/bash

- name: Create directories
  file:
    state: directory
    path: "{{ item }}"
    owner: "{{ az_devops_agent_user }}"
    group: "{{ az_devops_agent_user }}"
    mode: 0755
  with_items:
    - "{{ az_devops_agent_folder }}"
    - "{{ az_devops_work_folder }}"

- name: Download and unarchive
  unarchive:
    src: "https://vstsagentpackage.azureedge.net/agent/\
      {{ az_devops_agent_version }}/\
      vsts-agent-linux-x64-{{ az_devops_agent_version }}.tar.gz"
    dest: "{{ az_devops_agent_folder }}"
    remote_src: yes
    owner: "{{ az_devops_agent_user }}"
    group: "{{ az_devops_agent_user }}"
    creates: "{{ az_devops_agent_folder }}/config.sh"

- name: Uninstall agent service
  command: ./svc.sh uninstall
  become: true
  args:
    chdir: "{{ az_devops_agent_folder }}"
    removes: "{{ az_devops_agent_folder }}/runsvc.sh"
  ignore_errors: true

- name: Unconfigure agent
  command: "./config.sh remove --auth PAT --token {{ az_devops_accesstoken }}"
  args:
    chdir: "{{ az_devops_agent_folder }}"
    removes: "{{ az_devops_agent_folder }}/.agent"
  become: true
  become_user: "{{ az_devops_agent_user }}"
  ignore_errors: true

- name: Configure agent as build server
  command: >
    ./config.sh
    --unattended
    --pool '{{ az_devops_agent_pool_name }}'
    --acceptteeeula
    --agent '{{ az_devops_agent_name }}'
    --url '{{ az_devops_server_url }}'
    --work _work
    --auth PAT
    --token '{{ az_devops_accesstoken }}'
    --runasservice
  args:
    chdir: "{{ az_devops_agent_folder }}"
    creates: "{{ az_devops_agent_folder }}/.agent"
  become: true
  become_user: "{{ az_devops_agent_user }}"
  when:
    - az_devops_agent_role == 'build'

- name: Configure agent as deployment server
  command: >
    ./config.sh
    --unattended
    --deploymentgroup
    --deploymentgroupname '{{ az_devops_deployment_group_name }}'
    --addDeploymentGroupTags
    --deploymentGroupTags '{{ az_devops_deployment_group_tags }}'
    --projectname '{{ az_devops_project_name }}'
    --acceptteeeula
    --agent '{{ az_devops_agent_name }}'
    --url '{{ az_devops_server_url }}'
    --work _work
    --auth PAT
    --token '{{ az_devops_accesstoken }}'
    --runasservice
  args:
    chdir: "{{ az_devops_agent_folder }}"
    creates: "{{ az_devops_agent_folder }}/.agent"
  become: true
  become_user: "{{ az_devops_agent_user }}"
  when:
    - az_devops_agent_role == 'deployment'

- name: Install agent service
  command: ./svc.sh install {{ az_devops_agent_user }}
  become: true
  args:
    chdir: "{{ az_devops_agent_folder }}"
  changed_when: true

- name: Start agent service
  command: ./svc.sh start
  become: true
  args:
    chdir: "{{ az_devops_agent_folder }}"
  changed_when: true
